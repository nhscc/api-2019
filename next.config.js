"use strict";

var _bundleAnalyzer = _interopRequireDefault(require("@next/bundle-analyzer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('./src/dev-utils').populateEnv();

const paths = {
  universe: `${__dirname}/src/`,
  multiverse: `${__dirname}/lib/`
};

module.exports = () => {
  return (0, _bundleAnalyzer.default)({
    enabled: process.env.ANALYZE === 'true'
  })({
    distDir: 'build',
    webpack: config => {
      config.resolve && (config.resolve.alias = { ...config.resolve.alias,
        universe: paths.universe,
        multiverse: paths.multiverse
      });
      return config;
    },
    env: {
      MAX_LIMIT: process.env.MAX_LIMIT,
      IGNORE_RATE_LIMITS: process.env.IGNORE_RATE_LIMITS,
      LOCKOUT_ALL_KEYS: process.env.LOCKOUT_ALL_KEYS,
      DISALLOWED_METHODS: process.env.DISALLOWED_METHODS,
      REQUESTS_PER_CONTRIVED_ERROR: process.env.REQUESTS_PER_CONTRIVED_ERROR,
      MAX_OPTIONS_PER_ELECTION: process.env.MAX_OPTIONS_PER_ELECTION,
      MAX_RANKINGS_PER_ELECTION: process.env.MAX_RANKINGS_PER_ELECTION,
      MAX_CONTENT_LENGTH_BYTES: process.env.MAX_CONTENT_LENGTH_BYTES
    },
    experimental: {
      async rewrites() {
        return [{
          source: '/v1/meta',
          destination: '/api/v1/meta'
        }, {
          source: '/v1/elections',
          destination: '/api/v1/elections'
        }, {
          source: '/v1/election/:id',
          destination: '/api/v1/election/:id'
        }, {
          source: '/v1/election/:id/voters',
          destination: '/api/v1/election/:id/voters'
        }];
      }

    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9uZXh0LmNvbmZpZy50cyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwicG9wdWxhdGVFbnYiLCJwYXRocyIsInVuaXZlcnNlIiwiX19kaXJuYW1lIiwibXVsdGl2ZXJzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJlbmFibGVkIiwicHJvY2VzcyIsImVudiIsIkFOQUxZWkUiLCJkaXN0RGlyIiwid2VicGFjayIsImNvbmZpZyIsInJlc29sdmUiLCJhbGlhcyIsIk1BWF9MSU1JVCIsIklHTk9SRV9SQVRFX0xJTUlUUyIsIkxPQ0tPVVRfQUxMX0tFWVMiLCJESVNBTExPV0VEX01FVEhPRFMiLCJSRVFVRVNUU19QRVJfQ09OVFJJVkVEX0VSUk9SIiwiTUFYX09QVElPTlNfUEVSX0VMRUNUSU9OIiwiTUFYX1JBTktJTkdTX1BFUl9FTEVDVElPTiIsIk1BWF9DT05URU5UX0xFTkdUSF9CWVRFUyIsImV4cGVyaW1lbnRhbCIsInJld3JpdGVzIiwic291cmNlIiwiZGVzdGluYXRpb24iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFPQUEsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFdBQTNCOztBQUVBLE1BQU1DLEtBQUssR0FBRztBQUNWQyxFQUFBQSxRQUFRLEVBQUcsR0FBRUMsU0FBVSxPQURiO0FBRVZDLEVBQUFBLFVBQVUsRUFBRyxHQUFFRCxTQUFVO0FBRmYsQ0FBZDs7QUFLQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE1BQWM7QUFDM0IsU0FBTyw2QkFBbUI7QUFDdEJDLElBQUFBLE9BQU8sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQVosS0FBd0I7QUFEWCxHQUFuQixFQUVKO0FBRUNDLElBQUFBLE9BQU8sRUFBRSxPQUZWO0FBT0NDLElBQUFBLE9BQU8sRUFBR0MsTUFBRCxJQUEyQjtBQUloQ0EsTUFBQUEsTUFBTSxDQUFDQyxPQUFQLEtBQW1CRCxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsS0FBZixHQUF1QixFQUN0QyxHQUFHRixNQUFNLENBQUNDLE9BQVAsQ0FBZUMsS0FEb0I7QUFFdENiLFFBQUFBLFFBQVEsRUFBRUQsS0FBSyxDQUFDQyxRQUZzQjtBQUd0Q0UsUUFBQUEsVUFBVSxFQUFFSCxLQUFLLENBQUNHO0FBSG9CLE9BQTFDO0FBTUEsYUFBT1MsTUFBUDtBQUNILEtBbEJGO0FBdUJDSixJQUFBQSxHQUFHLEVBQUU7QUFDRE8sTUFBQUEsU0FBUyxFQUFFUixPQUFPLENBQUNDLEdBQVIsQ0FBWU8sU0FEdEI7QUFFREMsTUFBQUEsa0JBQWtCLEVBQUVULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxrQkFGL0I7QUFHREMsTUFBQUEsZ0JBQWdCLEVBQUVWLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUyxnQkFIN0I7QUFJREMsTUFBQUEsa0JBQWtCLEVBQUVYLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVSxrQkFKL0I7QUFLREMsTUFBQUEsNEJBQTRCLEVBQUVaLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVyw0QkFMekM7QUFNREMsTUFBQUEsd0JBQXdCLEVBQUViLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWSx3QkFOckM7QUFPREMsTUFBQUEseUJBQXlCLEVBQUVkLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYSx5QkFQdEM7QUFRREMsTUFBQUEsd0JBQXdCLEVBQUVmLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYztBQVJyQyxLQXZCTjtBQW9DQ0MsSUFBQUEsWUFBWSxFQUFFO0FBQ1YsWUFBTUMsUUFBTixHQUFpQjtBQUNiLGVBQU8sQ0FDSDtBQUNJQyxVQUFBQSxNQUFNLEVBQUUsVUFEWjtBQUVJQyxVQUFBQSxXQUFXLEVBQUU7QUFGakIsU0FERyxFQUtIO0FBQ0lELFVBQUFBLE1BQU0sRUFBRSxlQURaO0FBRUlDLFVBQUFBLFdBQVcsRUFBRTtBQUZqQixTQUxHLEVBU0g7QUFDSUQsVUFBQUEsTUFBTSxFQUFFLGtCQURaO0FBRUlDLFVBQUFBLFdBQVcsRUFBRTtBQUZqQixTQVRHLEVBYUg7QUFDSUQsVUFBQUEsTUFBTSxFQUFFLHlCQURaO0FBRUlDLFVBQUFBLFdBQVcsRUFBRTtBQUZqQixTQWJHLENBQVA7QUFrQkg7O0FBcEJTO0FBcENmLEdBRkksQ0FBUDtBQTZESCxDQTlERCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB3aXRoQnVuZGxlQW5hbHl6ZXIgZnJvbSAnQG5leHQvYnVuZGxlLWFuYWx5emVyJ1xuXG5pbXBvcnQgdHlwZSB7IENvbmZpZ3VyYXRpb24gfSBmcm9tICd3ZWJwYWNrJ1xuXG4vLyA/IE5vdCB1c2luZyBFUzYvVFMgaW1wb3J0IHN5bnRheCBoZXJlIGJlY2F1c2UgZGV2LXV0aWxzIGhhcyBzcGVjaWFsXG4vLyA/IGNpcmN1bXN0YW5jZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW5yZXNvbHZlZCwgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xucmVxdWlyZSgnLi9zcmMvZGV2LXV0aWxzJykucG9wdWxhdGVFbnYoKTtcblxuY29uc3QgcGF0aHMgPSB7XG4gICAgdW5pdmVyc2U6IGAke19fZGlybmFtZX0vc3JjL2AsXG4gICAgbXVsdGl2ZXJzZTogYCR7X19kaXJuYW1lfS9saWIvYCxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKCk6IG9iamVjdCA9PiB7XG4gICAgcmV0dXJuIHdpdGhCdW5kbGVBbmFseXplcih7XG4gICAgICAgIGVuYWJsZWQ6IHByb2Nlc3MuZW52LkFOQUxZWkUgPT09ICd0cnVlJ1xuICAgIH0pKHtcbiAgICAgICAgLy8gPyBSZW5hbWVzIHRoZSBidWlsZCBkaXIgXCJidWlsZFwiIGluc3RlYWQgb2YgXCIubmV4dFwiXG4gICAgICAgIGRpc3REaXI6ICdidWlsZCcsXG5cbiAgICAgICAgLy8gPyBXZWJwYWNrIGNvbmZpZ3VyYXRpb25cbiAgICAgICAgLy8gISBOb3RlIHRoYXQgdGhlIHdlYnBhY2sgY29uZmlndXJhdGlvbiBpcyBleGVjdXRlZCB0d2ljZTogb25jZVxuICAgICAgICAvLyAhIHNlcnZlci1zaWRlIGFuZCBvbmNlIGNsaWVudC1zaWRlIVxuICAgICAgICB3ZWJwYWNrOiAoY29uZmlnOiBDb25maWd1cmF0aW9uKSA9PiB7XG4gICAgICAgICAgICAvLyA/IFRoZXNlIGFyZSBhbGlhc2VzIHRoYXQgY2FuIGJlIHVzZWQgZHVyaW5nIEpTIGltcG9ydCBjYWxsc1xuICAgICAgICAgICAgLy8gISBOb3RlIHRoYXQgeW91IG11c3QgYWxzbyBjaGFuZ2UgdGhlc2Ugc2FtZSBhbGlhc2VzIGluIHRzY29uZmlnLmpzb25cbiAgICAgICAgICAgIC8vICEgTm90ZSB0aGF0IHlvdSBtdXN0IGFsc28gY2hhbmdlIHRoZXNlIHNhbWUgYWxpYXNlcyBpbiBwYWNrYWdlLmpzb24gKGplc3QpXG4gICAgICAgICAgICBjb25maWcucmVzb2x2ZSAmJiAoY29uZmlnLnJlc29sdmUuYWxpYXMgPSB7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLnJlc29sdmUuYWxpYXMsXG4gICAgICAgICAgICAgICAgdW5pdmVyc2U6IHBhdGhzLnVuaXZlcnNlLFxuICAgICAgICAgICAgICAgIG11bHRpdmVyc2U6IHBhdGhzLm11bHRpdmVyc2UsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICAgICAgfSxcblxuICAgICAgICAvLyA/IFNlbGVjdCBzb21lIGVudmlyb25tZW50IHZhcmlhYmxlcyBkZWZpbmVkIGluIC5lbnYgdG8gcHVzaCB0byB0aGVcbiAgICAgICAgLy8gPyBjbGllbnQuXG4gICAgICAgIC8vICEhIERPIE5PVCBQVVQgQU5ZIFNFQ1JFVCBFTlZJUk9OTUVOVCBWQVJJQUJMRVMgSEVSRSAhIVxuICAgICAgICBlbnY6IHtcbiAgICAgICAgICAgIE1BWF9MSU1JVDogcHJvY2Vzcy5lbnYuTUFYX0xJTUlULFxuICAgICAgICAgICAgSUdOT1JFX1JBVEVfTElNSVRTOiBwcm9jZXNzLmVudi5JR05PUkVfUkFURV9MSU1JVFMsXG4gICAgICAgICAgICBMT0NLT1VUX0FMTF9LRVlTOiBwcm9jZXNzLmVudi5MT0NLT1VUX0FMTF9LRVlTLFxuICAgICAgICAgICAgRElTQUxMT1dFRF9NRVRIT0RTOiBwcm9jZXNzLmVudi5ESVNBTExPV0VEX01FVEhPRFMsXG4gICAgICAgICAgICBSRVFVRVNUU19QRVJfQ09OVFJJVkVEX0VSUk9SOiBwcm9jZXNzLmVudi5SRVFVRVNUU19QRVJfQ09OVFJJVkVEX0VSUk9SLFxuICAgICAgICAgICAgTUFYX09QVElPTlNfUEVSX0VMRUNUSU9OOiBwcm9jZXNzLmVudi5NQVhfT1BUSU9OU19QRVJfRUxFQ1RJT04sXG4gICAgICAgICAgICBNQVhfUkFOS0lOR1NfUEVSX0VMRUNUSU9OOiBwcm9jZXNzLmVudi5NQVhfUkFOS0lOR1NfUEVSX0VMRUNUSU9OLFxuICAgICAgICAgICAgTUFYX0NPTlRFTlRfTEVOR1RIX0JZVEVTOiBwcm9jZXNzLmVudi5NQVhfQ09OVEVOVF9MRU5HVEhfQllURVMsXG4gICAgICAgIH0sXG5cbiAgICAgICAgLy8gVE9ETzogbW92ZSB0aGVzZSBvdXQgb2YgZXhwZXJpbWVudGFsIHdoZW4gdGhleSdyZSBub3QgZXhwZXJpbWVudGFsXG4gICAgICAgIC8vIFRPRE86IGFueW1vcmUhXG4gICAgICAgIGV4cGVyaW1lbnRhbDoge1xuICAgICAgICAgICAgYXN5bmMgcmV3cml0ZXMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiAnL3YxL21ldGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb246ICcvYXBpL3YxL21ldGEnXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogJy92MS9lbGVjdGlvbnMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb246ICcvYXBpL3YxL2VsZWN0aW9ucydcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiAnL3YxL2VsZWN0aW9uLzppZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbjogJy9hcGkvdjEvZWxlY3Rpb24vOmlkJ1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6ICcvdjEvZWxlY3Rpb24vOmlkL3ZvdGVycycsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbjogJy9hcGkvdjEvZWxlY3Rpb24vOmlkL3ZvdGVycydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG4iXX0=