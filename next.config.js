/* eslint-disable */
/**
* !!! DO NOT EDIT THIS FILE DIRECTLY !!!
* ! This file has been generated automatically. See the config/*.[jt]s versions
* ! of this file to make permanent modifications!
*/

"use strict";

require("source-map-support/register");

var _bundleAnalyzer = _interopRequireDefault(require("@next/bundle-analyzer"));

var _dotenvWebpack = _interopRequireDefault(require("dotenv-webpack"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('./src/dev-utils').populateEnv();

const paths = {
  universe: `${__dirname}/src/`,
  multiverse: `${__dirname}/lib/`
};

module.exports = () => {
  return (0, _bundleAnalyzer.default)({
    enabled: process.env.ANALYZE === 'true'
  })({
    distDir: 'build',
    webpack: (config, {
      isServer
    }) => {
      config.resolve && (config.resolve.alias = { ...config.resolve.alias,
        universe: paths.universe,
        multiverse: paths.multiverse
      });

      if (isServer) {
        config.plugins && config.plugins.push(new _dotenvWebpack.default());
      }

      return config;
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9uZXh0LmNvbmZpZy50cyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwicG9wdWxhdGVFbnYiLCJwYXRocyIsInVuaXZlcnNlIiwiX19kaXJuYW1lIiwibXVsdGl2ZXJzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJlbmFibGVkIiwicHJvY2VzcyIsImVudiIsIkFOQUxZWkUiLCJkaXN0RGlyIiwid2VicGFjayIsImNvbmZpZyIsImlzU2VydmVyIiwicmVzb2x2ZSIsImFsaWFzIiwicGx1Z2lucyIsInB1c2giLCJEb3RlbnZXZWJwYWNrUGx1Z2luIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7Ozs7QUFPQUEsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJDLFdBQTNCOztBQUVBLE1BQU1DLEtBQUssR0FBRztBQUNWQyxFQUFBQSxRQUFRLEVBQUcsR0FBRUMsU0FBVSxPQURiO0FBRVZDLEVBQUFBLFVBQVUsRUFBRyxHQUFFRCxTQUFVO0FBRmYsQ0FBZDs7QUFLQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE1BQWM7QUFDM0IsU0FBTyw2QkFBbUI7QUFDdEJDLElBQUFBLE9BQU8sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQVosS0FBd0I7QUFEWCxHQUFuQixFQUVKO0FBRUNDLElBQUFBLE9BQU8sRUFBRSxPQUZWO0FBT0NDLElBQUFBLE9BQU8sRUFBRSxDQUFDQyxNQUFELEVBQXdCO0FBQUVDLE1BQUFBO0FBQUYsS0FBeEIsS0FBZ0U7QUFJckVELE1BQUFBLE1BQU0sQ0FBQ0UsT0FBUCxLQUFtQkYsTUFBTSxDQUFDRSxPQUFQLENBQWVDLEtBQWYsR0FBdUIsRUFDdEMsR0FBR0gsTUFBTSxDQUFDRSxPQUFQLENBQWVDLEtBRG9CO0FBRXRDZCxRQUFBQSxRQUFRLEVBQUVELEtBQUssQ0FBQ0MsUUFGc0I7QUFHdENFLFFBQUFBLFVBQVUsRUFBRUgsS0FBSyxDQUFDRztBQUhvQixPQUExQzs7QUFNQSxVQUFHVSxRQUFILEVBQWE7QUFFVEQsUUFBQUEsTUFBTSxDQUFDSSxPQUFQLElBQWtCSixNQUFNLENBQUNJLE9BQVAsQ0FBZUMsSUFBZixDQUFvQixJQUFJQyxzQkFBSixFQUFwQixDQUFsQjtBQUNIOztBQUVELGFBQU9OLE1BQVA7QUFDSDtBQXZCRixHQUZJLENBQVA7QUEyQkgsQ0E1QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgd2l0aEJ1bmRsZUFuYWx5emVyIGZyb20gJ0BuZXh0L2J1bmRsZS1hbmFseXplcidcbmltcG9ydCBEb3RlbnZXZWJwYWNrUGx1Z2luIGZyb20gJ2RvdGVudi13ZWJwYWNrJ1xuXG5pbXBvcnQgdHlwZSB7IENvbmZpZ3VyYXRpb24gfSBmcm9tICd3ZWJwYWNrJ1xuXG4vLyA/IE5vdCB1c2luZyBFUzYvVFMgaW1wb3J0IHN5bnRheCBoZXJlIGJlY2F1c2UgZGV2LXV0aWxzIGhhcyBzcGVjaWFsXG4vLyA/IGNpcmN1bXN0YW5jZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW5yZXNvbHZlZCwgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xucmVxdWlyZSgnLi9zcmMvZGV2LXV0aWxzJykucG9wdWxhdGVFbnYoKTtcblxuY29uc3QgcGF0aHMgPSB7XG4gICAgdW5pdmVyc2U6IGAke19fZGlybmFtZX0vc3JjL2AsXG4gICAgbXVsdGl2ZXJzZTogYCR7X19kaXJuYW1lfS9saWIvYCxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKCk6IG9iamVjdCA9PiB7XG4gICAgcmV0dXJuIHdpdGhCdW5kbGVBbmFseXplcih7XG4gICAgICAgIGVuYWJsZWQ6IHByb2Nlc3MuZW52LkFOQUxZWkUgPT09ICd0cnVlJ1xuICAgIH0pKHtcbiAgICAgICAgLy8gPyBSZW5hbWVzIHRoZSBidWlsZCBkaXIgXCJidWlsZFwiIGluc3RlYWQgb2YgXCIubmV4dFwiXG4gICAgICAgIGRpc3REaXI6ICdidWlsZCcsXG5cbiAgICAgICAgLy8gPyBXZWJwYWNrIGNvbmZpZ3VyYXRpb25cbiAgICAgICAgLy8gISBOb3RlIHRoYXQgdGhlIHdlYnBhY2sgY29uZmlndXJhdGlvbiBpcyBleGVjdXRlZCB0d2ljZTogb25jZVxuICAgICAgICAvLyAhIHNlcnZlci1zaWRlIGFuZCBvbmNlIGNsaWVudC1zaWRlIVxuICAgICAgICB3ZWJwYWNrOiAoY29uZmlnOiBDb25maWd1cmF0aW9uLCB7IGlzU2VydmVyIH06IHsgaXNTZXJ2ZXI6IGJvb2xlYW4gfSkgPT4ge1xuICAgICAgICAgICAgLy8gPyBUaGVzZSBhcmUgYWxpYXNlcyB0aGF0IGNhbiBiZSB1c2VkIGR1cmluZyBKUyBpbXBvcnQgY2FsbHNcbiAgICAgICAgICAgIC8vICEgTm90ZSB0aGF0IHlvdSBtdXN0IGFsc28gY2hhbmdlIHRoZXNlIHNhbWUgYWxpYXNlcyBpbiB0c2NvbmZpZy5qc29uXG4gICAgICAgICAgICAvLyAhIE5vdGUgdGhhdCB5b3UgbXVzdCBhbHNvIGNoYW5nZSB0aGVzZSBzYW1lIGFsaWFzZXMgaW4gcGFja2FnZS5qc29uIChqZXN0KVxuICAgICAgICAgICAgY29uZmlnLnJlc29sdmUgJiYgKGNvbmZpZy5yZXNvbHZlLmFsaWFzID0ge1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZy5yZXNvbHZlLmFsaWFzLFxuICAgICAgICAgICAgICAgIHVuaXZlcnNlOiBwYXRocy51bml2ZXJzZSxcbiAgICAgICAgICAgICAgICBtdWx0aXZlcnNlOiBwYXRocy5tdWx0aXZlcnNlLFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmKGlzU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgLy8gPyBBZGQgcmVmZXJlbmNlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZGVmaW5lZCBpbiAuZW52IHRvIGJ1bmRsZVxuICAgICAgICAgICAgICAgIGNvbmZpZy5wbHVnaW5zICYmIGNvbmZpZy5wbHVnaW5zLnB1c2gobmV3IERvdGVudldlYnBhY2tQbHVnaW4oKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG4iXX0=